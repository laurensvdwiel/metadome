version: '2'
services:
    app:
        restart: always
        build: .
        command: "gunicorn -b 0.0.0.0:5000 metadome.application:app"
        environment:
            - FLASK_APP=metadome/application.py
        env_file:
           - metadome/database.env
        ports:
            - "5000:5000"
        depends_on:
            - db
            - celery
        volumes:
            - ${PWD}:/usr/src/app
            - data:/usr/data
            - clinvar:/usr/data/ClinVar
            - gencode:/usr/data/Gencode
            - gnomad:/usr/data/gnoMAD
            - pfam:/usr/data/PFAM
            - uniprot:/usr/data/UniProt
            - /usr/bin/docker:/usr/bin/docker               # Point the local file to where your docker executable is located
            - /var/run/docker.sock:/var/run/docker.sock     # Point the local file to where your docker.sock is located
            - interpro_temp:/usr/interpro_temp
    celery:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile
        command: celery -A metadome.application:celery worker --loglevel=info
        environment:
            - C_FORCE_ROOT=1
        env_file:
           - metadome/database.env
        depends_on:
            - db
            - redis
            - rabbitmq
        volumes:
            - ${PWD}:/usr/src/app
            - data:/usr/data
            - clinvar:/usr/data/ClinVar
            - gencode:/usr/data/Gencode
            - gnomad:/usr/data/gnoMAD
            - pfam:/usr/data/PFAM
            - uniprot:/usr/data/UniProt
            - /usr/bin/docker:/usr/bin/docker               # Point the local file to where your docker executable is located
            - /var/run/docker.sock:/var/run/docker.sock     # Point the local file to where your docker.sock is located
            - interpro_temp:/usr/interpro_temp
    db:
        restart: always
        image: postgres:10
        platform: linux/arm64
        env_file:
           - metadome/database.env
        ports:
            - "5432:5432"
        volumes:
            - metadome_postgres_db:/var/lib/postgresql/data
        healthcheck:
             test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
             interval: 30s
             timeout: 30s
             retries: 5
             start_period: 10s
    redis:
        restart: always
        image: redis:4.0
        platform: linux/arm64
        depends_on:
            - db
        ports:
          - "6379:6379"
    rabbitmq:
        restart: always
        image: rabbitmq:3.7
        platform: linux/arm64
        depends_on:
            - db
        ports:
          - "15672:15672"
volumes:
   data:
      driver_opts:
        type: none
        device: ${METADOME_DIR}
        o: bind
      driver: local
   clinvar:
      driver_opts:
        type: none
        device: ${CLINVAR_DIR}
        o: bind
      driver: local
   gencode:
      driver_opts:
        type: none
        device: ${GENCODE_DIR}
        o: bind
      driver: local
   gnomad:
      driver_opts:
        type: none
        device: ${GNOMAD_DIR}
        o: bind
      driver: local
   pfam:
      driver_opts:
        type: none
        device: ${PFAM_DIR}
        o: bind
      driver: local
   uniprot:
      driver_opts:
        type: none
        device: ${UNIPROT_DIR}
        o: bind
      driver: local
   metadome_postgres_db:
      driver_opts:
        type: none
        device: ${METADOME_POSTGRES_DB_DIR}
        o: bind
      driver: local
   interpro_temp: # Do not change this, this should be the last line with nothing behind it.
